// Test vectors, format :
/* <name> : <512 bits hash> : <input text> */

/* SHA-512 : 16dc3d92d154d43fe88fae55b0f79114e00737bf7d8372cfc2b5acd053d297998c04e7212a96332dfbcd034d7e379a57da0a5aa45121fcca07d31d7ed163dbab : testvectorsha512 */
uint8_t lp_hash[64] = {
  0x16, 0xdc, 0x3d, 0x92, 0xd1, 0x54, 0xd4, 0x3f, 0xe8, 0x8f, 0xae, 0x55, 0xb0, 0xf7, 0x91, 0x14, 0xe0, 0x07, 0x37, 0xbf, 0x7d, 0x83, 0x72, 0xcf, 0xc2, 0xb5, 0xac, 0xd0, 0x53, 0xd2, 0x97, 0x99, 0x8c, 0x04, 0xe7, 0x21, 0x2a, 0x96, 0x33, 0x2d, 0xfb, 0xcd, 0x03, 0x4d, 0x7e, 0x37, 0x9a, 0x57, 0xda, 0x0a, 0x5a, 0xa4, 0x51, 0x21, 0xfc, 0xca, 0x07, 0xd3, 0x1d, 0x7e, 0xd1, 0x63, 0xdb, 0xab
};
/* BLAKE2b : 97fd0e80f74574b6c1df24136bc5ad9ae8f81d118338cfa6909d5d839254c331f34900a23c8366cd6180d415a79483ae9e632eaeae2822f4aac61438530b4c93 : testvectorblake2b */
uint8_t lp_hash[64] = {
  0x97, 0xfd, 0x0e, 0x80, 0xf7, 0x45, 0x74, 0xb6, 0xc1, 0xdf, 0x24, 0x13, 0x6b, 0xc5, 0xad, 0x9a, 0xe8, 0xf8, 0x1d, 0x11, 0x83, 0x38, 0xcf, 0xa6, 0x90, 0x9d, 0x5d, 0x83, 0x92, 0x54, 0xc3, 0x31, 0xf3, 0x49, 0x00, 0xa2, 0x3c, 0x83, 0x66, 0xcd, 0x61, 0x80, 0xd4, 0x15, 0xa7, 0x94, 0x83, 0xae, 0x9e, 0x63, 0x2e, 0xae, 0xae, 0x28, 0x22, 0xf4, 0xaa, 0xc6, 0x14, 0x38, 0x53, 0x0b, 0x4c, 0x93
};
/* Streebog : 1b54d01a4af5b9d5cc3d86d68d285462b19abc2475222f35c085122be4ba1ffa00ad30f8767b3a82384c6574f024c311e2a481332b08ef7f41797891c1646f48 : 012345678901234567890123456789012345678901234567890123456789012 */
uint8_t lp_hash[64] = {
  0x1b, 0x54, 0xd0, 0x1a, 0x4a, 0xf5, 0xb9, 0xd5, 0xcc, 0x3d, 0x86, 0xd6, 0x8d, 0x28, 0x54, 0x62, 0xb1, 0x9a, 0xbc, 0x24, 0x75, 0x22, 0x2f, 0x35, 0xc0, 0x85, 0x12, 0x2b, 0xe4, 0xba, 0x1f, 0xfa, 0x00, 0xad, 0x30, 0xf8, 0x76, 0x7b, 0x3a, 0x82, 0x38, 0x4c, 0x65, 0x74, 0xf0, 0x24, 0xc3, 0x11, 0xe2, 0xa4, 0x81, 0x33, 0x2b, 0x08, 0xef, 0x7f, 0x41, 0x79, 0x78, 0x91, 0xc1, 0x64, 0x6f, 0x48
};
/* SHA-3 : 04a371e84ecfb5b8b77cb48610fca8182dd457ce6f326a0fd3d7ec2f1e91636dee691fbe0c985302ba1b0d8dc78c086346b533b49c030d99a27daf1139d6e75e : abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq */
uint8_t lp_hash[64] = {
  0x04, 0xa3, 0x71, 0xe8, 0x4e, 0xcf, 0xb5, 0xb8, 0xb7, 0x7c, 0xb4, 0x86, 0x10, 0xfc, 0xa8, 0x18, 0x2d, 0xd4, 0x57, 0xce, 0x6f, 0x32, 0x6a, 0x0f, 0xd3, 0xd7, 0xec, 0x2f, 0x1e, 0x91, 0x63, 0x6d, 0xee, 0x69, 0x1f, 0xbe, 0x0c, 0x98, 0x53, 0x02, 0xba, 0x1b, 0x0d, 0x8d, 0xc7, 0x8c, 0x08, 0x63, 0x46, 0xb5, 0x33, 0xb4, 0x9c, 0x03, 0x0d, 0x99, 0xa2, 0x7d, 0xaf, 0x11, 0x39, 0xd6, 0xe7, 0x5e
};
/* FNV-0 : b86db0b1171f4416dca1e50f309990acac87d059c90000000000000000000d21e948f68a34c192f62ea79bc942dbe7ce182036415f56e34bac982aac4afe9fd9 : chongo <Landon Curt Noll> /\../\ */
uint8_t lp_hash[64] = {
  0xb8, 0x6d, 0xb0, 0xb1, 0x17, 0x1f, 0x44, 0x16, 0xdc, 0xa1, 0xe5, 0x0f, 0x30, 0x99, 0x90, 0xac, 0xac, 0x87, 0xd0, 0x59, 0xc9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x21, 0xe9, 0x48, 0xf6, 0x8a, 0x34, 0xc1, 0x92, 0xf6, 0x2e, 0xa7, 0x9b, 0xc9, 0x42, 0xdb, 0xe7, 0xce, 0x18, 0x20, 0x36, 0x41, 0x5f, 0x56, 0xe3, 0x4b, 0xac, 0x98, 0x2a, 0xac, 0x4a, 0xfe, 0x9f, 0xd9
};
/* FNV-1 : da97ee2f631ff12f314997821dc5e43e7f39a376ec15371cfa15ca2f33fc042c8f61f8cfa1b2b3b79939f7347fce32312fa7f14ee33327dbd22e66d781603247 : testvectorfnv1 */
uint8_t lp_hash[64] = {
  0xda, 0x97, 0xee, 0x2f, 0x63, 0x1f, 0xf1, 0x2f, 0x31, 0x49, 0x97, 0x82, 0x1d, 0xc5, 0xe4, 0x3e, 0x7f, 0x39, 0xa3, 0x76, 0xec, 0x15, 0x37, 0x1c, 0xfa, 0x15, 0xca, 0x2f, 0x33, 0xfc, 0x04, 0x2c, 0x8f, 0x61, 0xf8, 0xcf, 0xa1, 0xb2, 0xb3, 0xb7, 0x99, 0x39, 0xf7, 0x34, 0x7f, 0xce, 0x32, 0x31, 0x2f, 0xa7, 0xf1, 0x4e, 0xe3, 0x33, 0x27, 0xdb, 0xd2, 0x2e, 0x66, 0xd7, 0x81, 0x60, 0x32, 0x47
};
/* FNV-1a : 160fefb000fbce2c587d327dbff6fe234dbb6488976cd7d31331e53ea6a997b41c445e31a66ecafe4caa37573d453fe6da0450b2698a67869c2bcabe57e35d40 : testvectorfnv1a */
uint8_t lp_hash[64] = {
  0x16, 0x0f, 0xef, 0xb0, 0x00, 0xfb, 0xce, 0x2c, 0x58, 0x7d, 0x32, 0x7d, 0xbf, 0xf6, 0xfe, 0x23, 0x4d, 0xbb, 0x64, 0x88, 0x97, 0x6c, 0xd7, 0xd3, 0x13, 0x31, 0xe5, 0x3e, 0xa6, 0xa9, 0x97, 0xb4, 0x1c, 0x44, 0x5e, 0x31, 0xa6, 0x6e, 0xca, 0xfe, 0x4c, 0xaa, 0x37, 0x57, 0x3d, 0x45, 0x3f, 0xe6, 0xda, 0x04, 0x50, 0xb2, 0x69, 0x8a, 0x67, 0x86, 0x9c, 0x2b, 0xca, 0xbe, 0x57, 0xe3, 0x5d, 0x40
};
/* Gr√∏stl : badc1f70ccd69e0cf3760c3f93884289da84ec13c70b3d12a53a7a8a4a513f99715d46288f55e1dbf926e6d084a0538e4eebfc91cf2b21452921ccde9131718d : The quick brown fox jumps over the lazy dog */
uint8_t lp_hash[64] = {
  0xba, 0xdc, 0x1f, 0x70, 0xcc, 0xd6, 0x9e, 0x0c, 0xf3, 0x76, 0x0c, 0x3f, 0x93, 0x88, 0x42, 0x89, 0xda, 0x84, 0xec, 0x13, 0xc7, 0x0b, 0x3d, 0x12, 0xa5, 0x3a, 0x7a, 0x8a, 0x4a, 0x51, 0x3f, 0x99, 0x71, 0x5d, 0x46, 0x28, 0x8f, 0x55, 0xe1, 0xdb, 0xf9, 0x26, 0xe6, 0xd0, 0x84, 0xa0, 0x53, 0x8e, 0x4e, 0xeb, 0xfc, 0x91, 0xcf, 0x2b, 0x21, 0x45, 0x29, 0x21, 0xcc, 0xde, 0x91, 0x31, 0x71, 0x8d
};
/* MD6 : 8140887dcecc1a292a06537276cde947940729ee891ac8e00c415c57ff930877285ba929cf0fd289867e4ae82852057fc84877982c93be3922a91f251fe12d68 : testvectormd6123 */
uint8_t lp_hash[64] = {
  0x81, 0x40, 0x88, 0x7d, 0xce, 0xcc, 0x1a, 0x29, 0x2a, 0x06, 0x53, 0x72, 0x76, 0xcd, 0xe9, 0x47, 0x94, 0x07, 0x29, 0xee, 0x89, 0x1a, 0xc8, 0xe0, 0x0c, 0x41, 0x5c, 0x57, 0xff, 0x93, 0x08, 0x77, 0x28, 0x5b, 0xa9, 0x29, 0xcf, 0x0f, 0xd2, 0x89, 0x86, 0x7e, 0x4a, 0xe8, 0x28, 0x52, 0x05, 0x7f, 0xc8, 0x48, 0x77, 0x98, 0x2c, 0x93, 0xbe, 0x39, 0x22, 0xa9, 0x1f, 0x25, 0x1f, 0xe1, 0x2d, 0x68
};
/* JH : 44e76b7fb68db6b0afa367e6d4f8a637587e3e0b31c979d79405dc0a5d5531d3869588fd391457676edad235b61f8b63530dc95fcf7b27d7e5845aa4d8fef034 : test */
uint8_t lp_hash[64] = {
  0x44, 0xe7, 0x6b, 0x7f, 0xb6, 0x8d, 0xb6, 0xb0, 0xaf, 0xa3, 0x67, 0xe6, 0xd4, 0xf8, 0xa6, 0x37, 0x58, 0x7e, 0x3e, 0x0b, 0x31, 0xc9, 0x79, 0xd7, 0x94, 0x05, 0xdc, 0x0a, 0x5d, 0x55, 0x31, 0xd3, 0x86, 0x95, 0x88, 0xfd, 0x39, 0x14, 0x57, 0x67, 0x6e, 0xda, 0xd2, 0x35, 0xb6, 0x1f, 0x8b, 0x63, 0x53, 0x0d, 0xc9, 0x5f, 0xcf, 0x7b, 0x27, 0xd7, 0xe5, 0x84, 0x5a, 0xa4, 0xd8, 0xfe, 0xf0, 0x34
};
/* BLAKE-512 : 1f7e26f63b6ad25a0896fd978fd050a1766391d2fd0471a77afb975e5034b7ad2d9ccf8dfb47abbbe656e1b82fbc634ba42ce186e8dc5e1ce09a885d41f43451 : The quick brown fox jumps over the lazy dog */
uint8_t lp_hash[64] = {
  0x1f, 0x7e, 0x26, 0xf6, 0x3b, 0x6a, 0xd2, 0x5a, 0x08, 0x96, 0xfd, 0x97, 0x8f, 0xd0, 0x50, 0xa1, 0x76, 0x63, 0x91, 0xd2, 0xfd, 0x04, 0x71, 0xa7, 0x7a, 0xfb, 0x97, 0x5e, 0x50, 0x34, 0xb7, 0xad, 0x2d, 0x9c, 0xcf, 0x8d, 0xfb, 0x47, 0xab, 0xbb, 0xe6, 0x56, 0xe1, 0xb8, 0x2f, 0xbc, 0x63, 0x4b, 0xa4, 0x2c, 0xe1, 0x86, 0xe8, 0xdc, 0x5e, 0x1c, 0xe0, 0x9a, 0x88, 0x5d, 0x41, 0xf4, 0x34, 0x51
};
/* LSH : a3d93cfe60dc1aacdd3bd4bef0a6985381a396c7d49d9fd177795697c3535208b5c57224bef21084d42083e95a4bd8eb33e869812b65031c428819a1e7ce596d : abc */
uint8_t lp_hash[64] = {
  0xa3, 0xd9, 0x3c, 0xfe, 0x60, 0xdc, 0x1a, 0xac, 0xdd, 0x3b, 0xd4, 0xbe, 0xf0, 0xa6, 0x98, 0x53, 0x81, 0xa3, 0x96, 0xc7, 0xd4, 0x9d, 0x9f, 0xd1, 0x77, 0x79, 0x56, 0x97, 0xc3, 0x53, 0x52, 0x08, 0xb5, 0xc5, 0x72, 0x24, 0xbe, 0xf2, 0x10, 0x84, 0xd4, 0x20, 0x83, 0xe9, 0x5a, 0x4b, 0xd8, 0xeb, 0x33, 0xe8, 0x69, 0x81, 0x2b, 0x65, 0x03, 0x1c, 0x42, 0x88, 0x19, 0xa1, 0xe7, 0xce, 0x59, 0x6d
};
/* Skein : 94c2ae036dba8783d0b3f7d6cc111ff810702f5c77707999be7e1c9486ff238a7044de734293147359b4ac7e1d09cd247c351d69826b78dcddd951f0ef912713 : The quick brown fox jumps over the lazy dog */
uint8_t lp_hash[64] = {
  0x94, 0xc2, 0xae, 0x03, 0x6d, 0xba, 0x87, 0x83, 0xd0, 0xb3, 0xf7, 0xd6, 0xcc, 0x11, 0x1f, 0xf8, 0x10, 0x70, 0x2f, 0x5c, 0x77, 0x70, 0x79, 0x99, 0xbe, 0x7e, 0x1c, 0x94, 0x86, 0xff, 0x23, 0x8a, 0x70, 0x44, 0xde, 0x73, 0x42, 0x93, 0x14, 0x73, 0x59, 0xb4, 0xac, 0x7e, 0x1d, 0x09, 0xcd, 0x24, 0x7c, 0x35, 0x1d, 0x69, 0x82, 0x6b, 0x78, 0xdc, 0xdd, 0xd9, 0x51, 0xf0, 0xef, 0x91, 0x27, 0x13
};
/* Keccak3 : 1e2e9fc2002b002d75198b7503210c05a1baac4560916a3c6d93bcce3a50d7f00fd395bf1647b9abb8d1afcc9c76c289b0c9383ba386a956da4b38934417789e : test */
uint8_t lp_hash[64] = {
  0x1e, 0x2e, 0x9f, 0xc2, 0x00, 0x2b, 0x00, 0x2d, 0x75, 0x19, 0x8b, 0x75, 0x03, 0x21, 0x0c, 0x05, 0xa1, 0xba, 0xac, 0x45, 0x60, 0x91, 0x6a, 0x3c, 0x6d, 0x93, 0xbc, 0xce, 0x3a, 0x50, 0xd7, 0xf0, 0x0f, 0xd3, 0x95, 0xbf, 0x16, 0x47, 0xb9, 0xab, 0xb8, 0xd1, 0xaf, 0xcc, 0x9c, 0x76, 0xc2, 0x89, 0xb0, 0xc9, 0x38, 0x3b, 0xa3, 0x86, 0xa9, 0x56, 0xda, 0x4b, 0x38, 0x93, 0x44, 0x17, 0x78, 0x9e
};
/* CubeHash : 01dfeb1b9ac7258da05cc2081d953cc035618db2efdd5e50da753a21e0e46507fee7779566b7d2e4bccd1cfdbebc2e13d5160da31a73297cf3c0ce99f8df3133 : testvectorcubehash512 */
uint8_t lp_hash[64] = {
  0x01, 0xdf, 0xeb, 0x1b, 0x9a, 0xc7, 0x25, 0x8d, 0xa0, 0x5c, 0xc2, 0x08, 0x1d, 0x95, 0x3c, 0xc0, 0x35, 0x61, 0x8d, 0xb2, 0xef, 0xdd, 0x5e, 0x50, 0xda, 0x75, 0x3a, 0x21, 0xe0, 0xe4, 0x65, 0x07, 0xfe, 0xe7, 0x77, 0x95, 0x66, 0xb7, 0xd2, 0xe4, 0xbc, 0xcd, 0x1c, 0xfd, 0xbe, 0xbc, 0x2e, 0x13, 0xd5, 0x16, 0x0d, 0xa3, 0x1a, 0x73, 0x29, 0x7c, 0xf3, 0xc0, 0xce, 0x99, 0xf8, 0xdf, 0x31, 0x33
};
/* Whirlpool-0 : 4f8f5cb531e3d49a61cf417cd133792ccfa501fd8da53ee368fed20e5fe0248c3a0b64f98a6533cee1da614c3a8ddec791ff05fee6d971d57c1348320f4eb42d : The quick brown fox jumps over the lazy dog */
uint8_t lp_hash[64] = {
  0x4f, 0x8f, 0x5c, 0xb5, 0x31, 0xe3, 0xd4, 0x9a, 0x61, 0xcf, 0x41, 0x7c, 0xd1, 0x33, 0x79, 0x2c, 0xcf, 0xa5, 0x01, 0xfd, 0x8d, 0xa5, 0x3e, 0xe3, 0x68, 0xfe, 0xd2, 0x0e, 0x5f, 0xe0, 0x24, 0x8c, 0x3a, 0x0b, 0x64, 0xf9, 0x8a, 0x65, 0x33, 0xce, 0xe1, 0xda, 0x61, 0x4c, 0x3a, 0x8d, 0xde, 0xc7, 0x91, 0xff, 0x05, 0xfe, 0xe6, 0xd9, 0x71, 0xd5, 0x7c, 0x13, 0x48, 0x32, 0x0f, 0x4e, 0xb4, 0x2d
};
/* Whirlpool-T : 3ccf8252d8bbb258460d9aa999c06ee38e67cb546cffcf48e91f700f6fc7c183ac8cc3d3096dd30a35b01f4620a1e3a20d79cd5168544d9e1b7cdf49970e87f1 : The quick brown fox jumps over the lazy dog */
uint8_t lp_hash[64] = {
  0x3c, 0xcf, 0x82, 0x52, 0xd8, 0xbb, 0xb2, 0x58, 0x46, 0x0d, 0x9a, 0xa9, 0x99, 0xc0, 0x6e, 0xe3, 0x8e, 0x67, 0xcb, 0x54, 0x6c, 0xff, 0xcf, 0x48, 0xe9, 0x1f, 0x70, 0x0f, 0x6f, 0xc7, 0xc1, 0x83, 0xac, 0x8c, 0xc3, 0xd3, 0x09, 0x6d, 0xd3, 0x0a, 0x35, 0xb0, 0x1f, 0x46, 0x20, 0xa1, 0xe3, 0xa2, 0x0d, 0x79, 0xcd, 0x51, 0x68, 0x54, 0x4d, 0x9e, 0x1b, 0x7c, 0xdf, 0x49, 0x97, 0x0e, 0x87, 0xf1
};
/* Whirlpool : b97de512e91e3828b40d2b0fdce9ceb3c4a71f9bea8d88e75c4fa854df36725fd2b52eb6544edcacd6f8beddfea403cb55ae31f03ad62a5ef54e42ee82c3fb35 : The quick brown fox jumps over the lazy dog */
uint8_t lp_hash[64] = {
  0xb9, 0x7d, 0xe5, 0x12, 0xe9, 0x1e, 0x38, 0x28, 0xb4, 0x0d, 0x2b, 0x0f, 0xdc, 0xe9, 0xce, 0xb3, 0xc4, 0xa7, 0x1f, 0x9b, 0xea, 0x8d, 0x88, 0xe7, 0x5c, 0x4f, 0xa8, 0x54, 0xdf, 0x36, 0x72, 0x5f, 0xd2, 0xb5, 0x2e, 0xb6, 0x54, 0x4e, 0xdc, 0xac, 0xd6, 0xf8, 0xbe, 0xdd, 0xfe, 0xa4, 0x03, 0xcb, 0x55, 0xae, 0x31, 0xf0, 0x3a, 0xd6, 0x2a, 0x5e, 0xf5, 0x4e, 0x42, 0xee, 0x82, 0xc3, 0xfb, 0x35
};

